1:03 2007-6-13 GMT+8 version 306
* Added the docs/ directory to contain referenceable docs. "formats.txt" is a doc describing formats and other informatino about the completed formats.
* Added file format support: "Rigaku dat file". Tried to use Boost::regex to handle this text-based data file. Although this is not necessary in this case, maybe it will simplify the code in my opinion.
* Added the "file_type" strings to usage function

3:37 2007-6-21 GMT+8 version 309
* Added file format support: "vamas-iso14976 file". However, the MAPPING mode file (which is a 2-ary function, (x,y)->z) is not handled. 
* To simplify the code, add several helper functions. e.g. read_line_int()

13:13 2007-6-29 GMT+8 version 310
* Re-write some of the code in load_vamas_file
* Change existing code to handle the "endian issue" and the "fixed-size int data type issue".
For the 1st issue, use endian.hpp to determine the endian of the machine, then exchange the bytes manually if necessary. For the 2nd issue, use fixed-size data types defined in <boost/cstdint.hpp> instead of raw types.

3:11 2007-7-10 GMT+8 version 314
* Reorganized all of the code into a new OO framework, make the code much more clear
* Separated code of the non-abstract classes for specific filetypes into different files, in case that xylib.cpp & xylib.h are too long and too complex
* Re-write a lot of code: simplify the code of reading Brucker Raw format v1 and v2v3
* Use an enum xy_ftype to describe file type to unify the file types, to get the file types and type descriptions
* Write a generic function to handle the UXD-like files (e.g, rigaku_dat files), not finished

13:55 2007-7-13 GMT+8 version 315
* re-implement the VAMAS reading function for license and mantainability considerations. Besides, many file-scope/range-scope meta variables are read
